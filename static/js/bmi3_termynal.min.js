/**
 * termynal.js
 * A lightweight, modern and extensible animated terminal window, using
 * async/await.
 *
 * @author Ines Montani <ines@ines.io>
 * @version 0.0.1
 * @license MIT
 */
"use strict";class Termynal{constructor(container="#termynal",options={}){this.container="string"==typeof container?document.querySelector(container):container,this.pfx=`data-${options.prefix||"ty"}`,this.originalStartDelay=this.startDelay=options.startDelay||parseFloat(this.container.getAttribute(`${this.pfx}-startDelay`))||600,this.originalTypeDelay=this.typeDelay=options.typeDelay||parseFloat(this.container.getAttribute(`${this.pfx}-typeDelay`))||90,this.originalLineDelay=this.lineDelay=options.lineDelay||parseFloat(this.container.getAttribute(`${this.pfx}-lineDelay`))||1500,this.progressLength=options.progressLength||parseFloat(this.container.getAttribute(`${this.pfx}-progressLength`))||40,this.progressChar=options.progressChar||this.container.getAttribute(`${this.pfx}-progressChar`)||"█",this.progressPercent=options.progressPercent||parseFloat(this.container.getAttribute(`${this.pfx}-progressPercent`))||100,this.cursor=options.cursor||this.container.getAttribute(`${this.pfx}-cursor`)||"▋",this.lineData=this.lineDataToElements(options.lineData||[]),this.loadLines(),options.noInit||this.init()}loadLines(){const finish=this.generateFinish();finish.style.visibility="hidden",this.container.appendChild(finish),this.lines=[...this.container.querySelectorAll(`[${this.pfx}]`)].concat(this.lineData);for(let line of this.lines)line.style.visibility="hidden",this.container.appendChild(line);const restart=this.generateRestart();restart.style.visibility="hidden",this.container.appendChild(restart),this.container.setAttribute("data-termynal","")}init(){const containerStyle=getComputedStyle(this.container);this.container.style.width="0px"!==containerStyle.width?containerStyle.width:void 0,this.container.style.minHeight="0px"!==containerStyle.height?containerStyle.height:void 0,this.container.setAttribute("data-termynal",""),this.container.innerHTML="";for(let line of this.lines)line.style.visibility="visible";this.start()}async start(){this.addFinish(),await this._wait(this.startDelay);for(let line of this.lines){const type=line.getAttribute(this.pfx),delay=line.getAttribute(`${this.pfx}-delay`)||this.lineDelay;"input"==type?(line.setAttribute(`${this.pfx}-cursor`,this.cursor),await this.type(line),await this._wait(delay)):"progress"==type?(await this.progress(line),await this._wait(delay)):(this.container.appendChild(line),await this._wait(delay)),line.removeAttribute(`${this.pfx}-cursor`)}this.addRestart(),this.finishElement.style.visibility="hidden",this.lineDelay=this.originalLineDelay,this.typeDelay=this.originalTypeDelay,this.startDelay=this.originalStartDelay}generateRestart(){const restart=document.createElement("a");return restart.onclick=e=>{e.preventDefault(),this.container.innerHTML="",this.init()},restart.href="#",restart.setAttribute("data-terminal-control",""),restart.innerHTML="restart ↻",restart}generateFinish(){const finish=document.createElement("a");return finish.onclick=e=>{e.preventDefault(),this.lineDelay=0,this.typeDelay=0,this.startDelay=0},finish.href="#",finish.setAttribute("data-terminal-control",""),finish.innerHTML="fast →",this.finishElement=finish,finish}addRestart(){const restart=this.generateRestart();this.container.appendChild(restart)}addFinish(){const finish=this.generateFinish();this.container.appendChild(finish)}async type(line){const chars=[...line.textContent];line.textContent="",this.container.appendChild(line);for(let char of chars){const delay=line.getAttribute(`${this.pfx}-typeDelay`)||this.typeDelay;await this._wait(delay),line.textContent+=char}}async progress(line){const progressLength=line.getAttribute(`${this.pfx}-progressLength`)||this.progressLength,progressChar=line.getAttribute(`${this.pfx}-progressChar`)||this.progressChar,chars=progressChar.repeat(progressLength),progressPercent=line.getAttribute(`${this.pfx}-progressPercent`)||this.progressPercent;line.textContent="",this.container.appendChild(line);for(let i=1;i<chars.length+1;i++){await this._wait(this.typeDelay);const percent=Math.round(i/chars.length*100);if(line.textContent=`${chars.slice(0,i)} %`,percent>progressPercent)break}}_wait(time){return new Promise(resolve=>setTimeout(resolve,time))}lineDataToElements(lineData){return lineData.map(line=>{let div=document.createElement("div");return div.innerHTML=`<span ${this._attributes(line)}>${line.value||""}</span>`,div.firstElementChild})}_attributes(line){let attrs="";for(let prop in line)"class"!==prop?"type"===prop?attrs+=`${this.pfx}="${line[prop]}" `:"value"!==prop&&(attrs+=`${this.pfx}-="${line[prop]}" `):attrs+=` class=${line[prop]} `;return attrs}}if(document.currentScript.hasAttribute("data-termynal-container")){const containers=document.currentScript.getAttribute("data-termynal-container");containers.split("|").forEach(container=>new Termynal(container))}